#include <iostream>
#include <ctime>   // библиотека времени
#include <iomanip> //форматирование вывода
using namespace std;

// план программистов
// С# , yml и тд
// .Net , system , network progr , DB - курсовая по .Net
// Web , html , css, php , JS
// Azure , Unyti(.Net C#)

// три вида ошибок
// 1. ошибка компиляции (синтаксические)
// 2. ошибки времени выполнения (после компиляции(например деление на ноль))
// 3. логические ошибки (ошибка алгоритма, не программы(результат который не ожидается))

// f10 - запуск пошаговой отладки кода (нужно клацать)
// f5 - запуск автоматической отладки
// Shift+f5 - выход из режима отладки
// f9 - добавить или снять точку останова (breakpoint)

int main()
{
    //const int size = 10;
    //int arr[size]{};
    // int arr[7]; - массив из 7 едементов заполненых мусоров
    // int arr[7]{}; - массив заполненый нулями
    // int arr[]{6,6,7,8,9,9}; сам посчитает кол-во елементов

    /*     for (size_t i = 0; i < 7; i++)
    {
        cout << arr[i] << " ";
    } */

    /* for (size_t i = 0; i < size; i++)
    {
        cout << arr[i] << " ";
    } */

    //заполнить массив из десяти еллементов нечетными числами
    /* for (int i = 0, j = 1; i < size; i++, j += 2)
    {
        arr[i] = j;
        cout << arr[i] << " ";
    } */
    //--------------------------------------------------------------------------

    //заполнить массив из десяти еллементов нечетными числами
    /* for (int i = 0; i < size; i++)
    {
        arr[i] = i*2+1;
        cout << arr[i] << " ";
    } */
    //--------------------------------------------------------------------------

    //считывать с клавиатуры данные введенные пльзователь и заполнять ими массив
    /* for (size_t i = 0; i < size; i++)
    {
        cout << "--> ";
        cin >> arr[i];
    }
    for (size_t i = 0; i < size; i++)
    {
        cout << arr[i] << " ";
    } */
    //--------------------------------------------------------------------------

    //находить минимальное число
    /* for (size_t i = 0; i < size; i++)
    {
        cout << "--> ";
        cin >> arr[i];
    }
    for (size_t i = 0; i < size; i++)
    {
        cout << arr[i] << " ";
    }
    int min = arr[0];
    for (size_t i = 0; i < size; i++)
    {

        if (arr[i] < min)
        {
            min = arr[i];
        }
    }
    cout << "\nMin = " << min << endl; */
    //--------------------------------------------------------------------------

    //заполнять массив случайными числами
    /*     srand(time(0)); // установить от чего будет отталкиваться рандом (от времени)
    int max = 10, min = -10;
    for (size_t i = 0; i < size; i++)
    {
        //arr[i] = rand() % 10; // последняя цифра от рандома ,который от времени
        //arr[i] = rand() % 40 +10 ; // рандом от 10 до 49
        //arr[i] = rand() % 30 -10; // рандом от -10 до 19
        arr[i] = rand() % (max - min) + min; // формула диапазона
    }
    for (size_t i = 0; i < size; i++)
    {
        cout << arr[i] << " ";
    } */
    //--------------------------------------------------------------------------

    //10 елем,рандом от 15 до 50 , найти сумму
    /* srand(time(0)); // установить от чего будет отталкиваться рандом (от времени)
    int max = 51, min = 15;
    for (size_t i = 0; i < size; i++)
    {

        arr[i] = rand() % (max - min) + min; // формула диапазона
        cout << arr[i] << " ";
    }
    int sum = 0;
    for (size_t i = 0; i < size; i++)
    {
        sum += arr[i];
    }
    cout << "\nSum = " << sum << endl; */
    //--------------------------------------------------------------------------

    // многомерные массивы
    // четырехмерный массив - это масив ,в котором каждый элемент это трехмерный массив(куб)
    // трехмерный массив это редкость (для 3д игр)

    /* const int row = 3, col = 4;
    int arr[row][col]{3, 18, 2, 15, 5, 7, 8, 9, 4, 6, 12, 3}; // сама переадресовывает
    //int arr[row][col]{{3, 18, 2, 15}, {5, 7, 8, 9}, {4, 6, 12, 3}}; // явное указание многомерного массива
    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < col; j++)
        {
            cout << setw(3) << arr[i][j]; // setw - задать ширина значения
        }
        cout << endl;
    } */
    //--------------------------------------------------------------------------

    //заполняет двухмерный массив 1-25
    /* const int row = 5, col = 5;
    int arr[row][col]{0};
    int n = 1;
    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < col; j++)
        {
            arr[i][j] = n++;
            cout << setw(4) << arr[i][j];
        }
        cout << endl;
    } */
    //--------------------------------------------------------------------------

    //выводить кол-во четных чисел
    const int row = 5, col = 5;
    int arr[row][col]{0};
    int count = 0;
    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < col; j++)
        {
            arr[i][j] = rand() % 10;
            if (arr[i][j] % 2 == 0)
            {
                count++;
            }

            cout << setw(4) << arr[i][j];
        }
        cout << endl;
    }
    cout << "count = " << count << endl;
    //--------------------------------------------------------------------------
}
