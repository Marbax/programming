//------------------------------------------HW7-------------------------------------------------
//-------------------------------------------1-------------------------------------------------

#include <iostream>
using namespace std;

// 1. Создать динамический массив, размер которого пользователь вводит с
// клавиатуры. Заполнить его случайными числами из диапазона [10;20] и вывести
// его на экран.

void Fill_array(int *arr, int size)
{
    int max = 20, min = 10;
    for (int i = 0; i < size; i++)
    {
        arr[i] = rand() % (max - min) + min;
    }
}

void Print_array(int *arr, int size)
{
    for (int i = 0; i < size; i++)
    {
        cout << arr[i] << " ";
    }
    cout << endl;
}

int main()
{
    srand(time(0));

    int size = 0;
    cout << "Enter array's size" << endl;
    cin >> size;
    int *arr = new int[size];
    Fill_array(arr, size);
    Print_array(arr, size);
    delete[] arr;
}

//-------------------------------------------2-------------------------------------------------

#include <iostream>
using namespace std;

// 2. Создать статический массив на 10 элементов и заполнить его случайными
// числами из диапазона [0;5]. Подсчитать количество элементов не равных нулю.
// Создать динамический массив соответствующего размера и скопировать в него
// все ненулевые элементы.

void Fill_array(int *arr, int size)
{
    srand(time(0));
    int max = 5, min = 0;
    for (int i = 0; i < size; i++)
    {
        arr[i] = rand() % (max - min) + min;
    }
}

void Print_array(int *arr, int size)
{
    for (int i = 0; i < size; i++)
    {
        cout << arr[i] << " ";
    }
    cout << endl;
}

int Counter(int *arr, int size)
{
    int n = 0;
    for (int i = 0; i < size; i++)
    {
        if (arr[i] != 0)
        {
            n++;
        }
    }
    return n;
}

void Fill_dynamic_array(int *f_arr, int *s_arr, int size)
{
    for (int i = 0, j = 0; i < size; i++)
    {
        if (f_arr[i] != 0)
        {
            s_arr[j] = f_arr[i];
            j++;
        }
    }
}

int main()
{
    int f_arr[10]{};
    Fill_array(f_arr, 10);
    cout << "Starting array ==> ";
    Print_array(f_arr, 10);
    int size = Counter(f_arr, 10);
    int *s_arr = new int[size];
    Fill_dynamic_array(f_arr, s_arr, 10);
    cout << "\nDynamycaly created array from not zero values of started array ==> ";
    Print_array(s_arr, size);
    delete[] s_arr;
}

//-------------------------------------------3-------------------------------------------------

#include <iostream>
#include <time.h>
using namespace std;

// 3. Программа должна создать два статических массива со случайными
// элементами из диапазона [0;10], по 10 элементов в каждом массиве,
// отсортировать эти массивы по возрастанию и вывести каждый массив на экран
// на отдельной строке. Затем программа должна создать динамический массив
// нужного размера и скопировать в него все элементы из первых двух массивов в
// неубывающем порядке(сортировать результирующий массив нельзя). Вывести
// получившийся динамический массив на экран на отдельной строке.

void Fill_array(int *arr, int size)
{
    srand(time(0));
    int max = 10, min = 0;
    for (int i = 0; i < size; i++)
    {
        arr[i] = rand() % (max - min) + min;
    }
}

void Print_array(int *arr, int size)
{
    for (int i = 0; i < size; i++)
    {
        cout << arr[i] << " ";
    }
    cout << endl;
}

void Sort_Array(int *arr, int size)
{
    for (int i = 0; i < size; i++)
    {
        for (int j = size - 1; j > i; j--)
        {
            if (arr[j] < arr[j - 1])
            {
                swap(arr[j], arr[j - 1]); // своп меняет местами елеменеты
            }
        }
    }
}

void Fill_dinamyc_array(int *res, int *mas1, int *mas2, int size, int s_size)
{
    for (int i = 0, j = 0, n = 0; n < size; n++)
    {
        if (i >= s_size || j >= s_size)
        {
            if (i >= s_size)
            {
                res[n] = mas2[j];
                j++;
            }
            else
            {
                res[n] = mas1[i];
                i++;
            }
        }
        else
        {
            if (mas1[i] < mas2[j])
            {
                res[n] = mas1[i];
                i++;
            }
            else
            {
                res[n] = mas2[j];
                j++;
            }
        }
    }
}

int main()
{
    int s_size = 10;
    int mas1[s_size]{};
    int mas2[s_size]{};
    Fill_array(mas1, s_size);
    system("sleep 1");
    Fill_array(mas2, s_size);
    Sort_Array(mas1, s_size);
    Sort_Array(mas2, s_size);
    Print_array(mas1, s_size);
    Print_array(mas2, s_size);
    int size = s_size * 2;
    int *res = new int[size];
    Fill_dinamyc_array(res, mas1, mas2, size, s_size);
    Print_array(res, size);
    delete[] res;
}


//-------------------------------------------4-------------------------------------------------


#include <iostream>
#include <ctime>
#include <iomanip> //форматирование вывода
using namespace std;

// 4. Программа должна создать два статических массива со случайными
// элементами из диапазона [-25;25], по 10 элементов в каждом массиве, вывести
// каждый массив на экран на отдельной строке. Затем программа должна создать
// динамический массив нужного размера и скопировать в него все
// положительные элементы из первых двух массивов. Вывести получившийся
// динамический массив на экран на отдельной строке.

void Fill_array(int *arr, int size)
{
    srand(time(0));
    int max = 25, min = -25;
    for (int i = 0; i < size; i++)
    {
        arr[i] = rand() % (max - min) + min;
    }
}

void Print_array(int *arr, int size)
{
    for (int i = 0; i < size; i++)
    {
        cout << setw(3) << arr[i] << " ";
    }
    cout << endl;
}

int Counter(int *arr, int size)
{
    int n = 0;
    for (int i = 0; i < size; i++)
    {
        if (arr[i] >= 0)
        {
            n++;
        }
    }
    return n;
}

void Fill_dynamic_array(int *r_arr, int *f_arr, int *s_arr, int size)
{
    int j = 0;
    for (int i = 0; i < size; i++)
    {
        if (f_arr[i] >= 0)
        {
            r_arr[j] = f_arr[i];
            j++;
        }
    }
    for (int i = 0; i < size; i++)
    {
        if (s_arr[i] >= 0)
        {
            r_arr[j] = s_arr[i];
            j++;
        }
    }
}

int main()
{
    int f_arr[10]{};
    int s_arr[10]{};
    Fill_array(f_arr, 10);
    system("sleep 1");
    Fill_array(s_arr, 10);
    cout << "Starting arrays :\n";
    Print_array(f_arr, 10);
    Print_array(s_arr, 10);
    int size = Counter(f_arr, 10) + Counter(s_arr, 10);
    int *r_arr = new int[size];
    Fill_dynamic_array(r_arr, f_arr, s_arr, 10);
    cout << "\nDynamycaly created array from postive numbers of 2 another arrays :\n ";
    Print_array(r_arr, size);
    delete[] r_arr;
}

//-------------------------------------------5-------------------------------------------------

#include <iostream>
#include <ctime>
#include <iomanip> //форматирование вывода
using namespace std;

// 5. Программа должна создать два статических массива со случайными
// элементами из диапазона [5;20], по 10 элементов в каждом массиве, вывести
// каждый массив на экран на отдельной строке. Затем программа должна создать
// динамический массив нужного размера и скопировать в него все общие
// элементы из первых двух массивов(без повторений). Вывести получившийся
// динамический массив на экран на отдельной строке.

void Fill_array(int *arr, int size)
{
    srand(time(0));
    int max = 20, min = 5;
    for (int i = 0; i < size; i++)
    {
        arr[i] = rand() % (max - min) + min;
    }
}

void Print_array(int *arr, int size)
{
    for (int i = 0; i < size; i++)
    {
        cout << setw(3) << arr[i] << " ";
    }
    cout << endl;
}

int Counter(int *f_arr, int *s_arr, int size)
{
    int n = 0;
    for (int i = 0; i < size; i++)
    {
        bool k = true;
        for (int j = 0; j < size; j++)
        {
            if (f_arr[i] == s_arr[j] && k)
            {
                for (int l = i - 1; l >= 0; l--)
                {
                    if (f_arr[i] == f_arr[l])
                    {
                        k = false;
                    }
                }
                if (k)
                {
                    n++;
                    k = false;
                }
            }
        }
    }
    return n;
}

void Fill_dynamic_array(int *r_arr, int *f_arr, int *s_arr, int size)
{
    int n = 0;
    for (int i = 0; i < size; i++)
    {
        bool k = true;
        for (int j = 0; j < size; j++)
        {
            if (f_arr[i] == s_arr[j] && k)
            {
                for (int l = i - 1; l >= 0; l--)
                {
                    if (f_arr[i] == f_arr[l])
                    {
                        k = false;
                    }
                }
                if (k)
                {
                    r_arr[n] = f_arr[i];
                    n++;
                    k = false;
                }
            }
        }
    }
}

int main()
{
    int static_size = 10;
    int f_arr[static_size]{};
    int s_arr[static_size]{};
    Fill_array(f_arr, static_size);
    system("sleep 1");
    Fill_array(s_arr, static_size);
    cout << "Starting arrays :\n";
    Print_array(f_arr, static_size);
    Print_array(s_arr, static_size);
    int size = Counter(f_arr, s_arr, static_size);
    int *r_arr = new int[size];
    Fill_dynamic_array(r_arr, f_arr, s_arr, static_size);
    cout << "\nDynamycaly created array from common ellements of 2 another arrays :\n ";
    Print_array(r_arr, size);
    delete[] r_arr;
}

//-------------------------------------------6-------------------------------------------------

#include <iostream>
#include <ctime>
#include <iomanip> //форматирование вывода
using namespace std;

// 6. Программа должна создать динамический массив из 20 случайных
// элементов из диапазона [1;9] и вывести его на экран. Далее программа должна
// скопировать во второй динамический массив только те элементы, которые в
// первом массиве встретились ровно 2 раза (если такие будут) и вывести второй
// массив на экран на отдельной строке.

void Fill_array(int *arr, int size)
{
    srand(time(0));
    int max = 9, min = 1;
    for (int i = 0; i < size; i++)
    {
        arr[i] = rand() % (max - min) + min;
    }
}

void Print_array(int *arr, int size)
{
    for (int i = 0; i < size; i++)
    {
        cout << setw(3) << arr[i] << " ";
    }
    cout << endl;
}

int Counter(int *f_arr, int size)
{
    int n = 0;
    for (int i = 0; i < size; i++)
    {
        int k = 0;
        for (int j = 0; j < size; j++)
        {
            if (f_arr[i] == f_arr[j])
            {
                k++;
            }
        }
        if (k == 2)
        {
            for (int l = i - 1; l >= 0; l--)
            {
                if (f_arr[i] == f_arr[l])
                {
                    k++;
                }
            }
            if (k == 2)
            {
                n++;
            }
        }
    }
    return n;
}

void Fill_dynamic_array(int *r_arr, int *f_arr, int size)
{
    int n = 0;
    for (int i = 0; i < size; i++)
    {
        int k = 0;
        for (int j = 0; j < size; j++)
        {
            if (f_arr[i] == f_arr[j])
            {
                k++;
            }
        }
        if (k == 2)
        {
            for (int l = i - 1; l >= 0; l--)
            {
                if (f_arr[i] == f_arr[l])
                {
                    k++;
                }
            }
            if (k == 2)
            {
                r_arr[n] = f_arr[i];
                n++;
            }
        }
    }
}

int main()
{
    int static_size = 20;
    int f_arr[static_size]{};
    Fill_array(f_arr, static_size);
    cout << "Starting array :\n";
    Print_array(f_arr, static_size);
    int size = Counter(f_arr, static_size);
    int *r_arr = new int[size];
    Fill_dynamic_array(r_arr, f_arr, static_size);
    cout << "\nDynamycaly created array from elements that occur only twice :\n ";
    Print_array(r_arr, size);
    delete[] r_arr;
}
